// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Rule schemas should be convertible to TS types for documentation purposes explicit-member-accessibility 1`] = `
"
# SCHEMA:

[
  {
    "$defs": {
      "accessibilityLevel": {
        "oneOf": [
          {
            "enum": ["explicit"],
            "description": "Always require an accessor."
          },
          {
            "enum": ["no-public"],
            "description": "Require an accessor except when public."
          },
          {
            "enum": ["off"],
            "description": "Never check whether there is an accessor."
          }
        ]
      }
    },
    "type": "object",
    "properties": {
      "accessibility": { "$ref": "#/items/0/$defs/accessibilityLevel" },
      "overrides": {
        "type": "object",
        "properties": {
          "accessors": { "$ref": "#/items/0/$defs/accessibilityLevel" },
          "constructors": { "$ref": "#/items/0/$defs/accessibilityLevel" },
          "methods": { "$ref": "#/items/0/$defs/accessibilityLevel" },
          "properties": { "$ref": "#/items/0/$defs/accessibilityLevel" },
          "parameterProperties": {
            "$ref": "#/items/0/$defs/accessibilityLevel"
          }
        },
        "additionalProperties": false
      },
      "ignoredMethodNames": { "type": "array", "items": { "type": "string" } }
    },
    "additionalProperties": false
  }
]


# TYPES:

type AccessibilityLevel =
  /** Always require an accessor. */
  | 'explicit'
  /** Require an accessor except when public. */
  | 'no-public'
  /** Never check whether there is an accessor. */
  | 'off';

type Options = [
  {
    accessibility?: AccessibilityLevel;
    overrides?: {
      accessors?: AccessibilityLevel;
      constructors?: AccessibilityLevel;
      methods?: AccessibilityLevel;
      properties?: AccessibilityLevel;
      parameterProperties?: AccessibilityLevel;
    };
    ignoredMethodNames?: string[];
  },
];
"
`;
