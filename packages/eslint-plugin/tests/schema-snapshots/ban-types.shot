// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Rule schemas should be convertible to TS types for documentation purposes ban-types 1`] = `
"
# SCHEMA:

[
  {
    "$defs": {
      "banConfig": {
        "oneOf": [
          {
            "description": "Bans the type with the default message",
            "type": "null"
          },
          {
            "description": "Un-bans the type (useful when paired with \`extendDefaults\`)",
            "enum": [false]
          },
          {
            "description": "Bans the type with the default message",
            "enum": [true]
          },
          {
            "description": "Bans the type with a custom message",
            "type": "string"
          },
          {
            "additionalProperties": false,
            "description": "Bans a type",
            "properties": {
              "fixWith": {
                "description": "Type to autofix replace with.",
                "type": "string"
              },
              "message": {
                "description": "Custom error message",
                "type": "string"
              }
            },
            "type": "object"
          }
        ]
      }
    },
    "additionalProperties": false,
    "properties": {
      "extendDefaults": {
        "type": "boolean"
      },
      "types": {
        "additionalProperties": {
          "$ref": "#/items/0/$defs/banConfig"
        },
        "type": "object"
      }
    },
    "type": "object"
  }
]


# TYPES:

type BanConfig =
  /** Un-bans the type (useful when paired with \`extendDefaults\`) */
  | false
  /** Bans the type with the default message */
  | true
  /** Bans a type */
  | {
      /** Type to autofix replace with. */
      fixWith?: string;
      /** Custom error message */
      message?: string;
    }
  /** Bans the type with the default message */
  | null
  /** Bans the type with a custom message */
  | string;

type Options = [
  {
    extendDefaults?: boolean;
    types?: {
      [k: string]: BanConfig;
    };
  },
];
"
`;
